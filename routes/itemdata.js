// Generated by CoffeeScript 1.12.7
(function() {
  var database, express, item, router;

  express = require('express');

  router = express.Router();

  database = require('../routes/database');

  item = require('../routes/item');

  router.post('/new', function(req, res, next) {
    var currentItem, db, i, id, insert, len, ref;
    db = database.getDb();
    currentItem = new item.item(database.getId(), req.body.Name, req.body.Status, req.body.Type, req.body.Link, req.body.Description, req.body.Date, req.body.Technologies, req.body.Images);
    if (typeof req.body.collection === 'object') {
      ref = req.body.collection;
      for (i = 0, len = ref.length; i < len; i++) {
        id = ref[i];
        db.collection('collection').find({
          '_id': database.getId(id)
        }).toArray(function(err, result) {
          console.log(result);
          return result[0].hasItems.push(currentItem._id);
        });
      }
    } else {
      db.collection('collection').find({
        '_id': database.getId(req.body.collection)
      }).toArray(function(err, result) {
        var currentCollection;
        currentCollection = new item.collection(result[0]._id, result[0].name, result[0].status, result[0].type, result[0].link, result[0].description, result[0].image, result[0].hasItems);
        currentItem.setCollection(currentCollection);
        console.log(currentItem);
        return console.log(currentCollection);
      });
    }
    insert = function(item, collection) {
      db.collection('item').insert(item);
      db.collection('collection').insert(collection);
    };
  });

  router.post('/getItem', function(req, res, next) {
    var db;
    db = database.getDb();
    console.log('getting', req.body.id);
    db.collection('item').find({
      '_id': database.getId(req.body.id)
    }).toArray(function(err, result) {
      res.send(result[0]);
    });
  });

  router.post('/updateItem', function(req, res, next) {
    var db;
    db = database.getDb();
    return console.log('editing');
  });

  router.get('/', function(req, res, next) {
    database.getDb().collection('item').find({}).toArray(function(err, items) {
      database.getDb().collection('collection').find({}).toArray(function(err, collections) {
        res.render('itemdata', {
          itemKeys: Object.keys(items),
          items: items,
          collectionKeys: Object.keys(collections),
          collections: collections
        });
      });
    });
  });

  module.exports = router;

}).call(this);
